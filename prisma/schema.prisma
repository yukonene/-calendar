// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//サーバーからDBへ移動の際のＥＴＣのようなもの。入口。

//sqlのファイルのまとめ。

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//tableの設定
model User {
  id            Int       @default(autoincrement()) @id
  uid           String    @unique
  name          String
  avatarFileKey String? 
  avatarOriginalFileName  String? 
  activityAreas String?
  favoriteType  String?
  strongPoints  String?
  favoriteGroup String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  events Event[]
}

model Event{
  id            Int       @default(autoincrement()) @id
  title         String
  startDateTime DateTime
  endDateTime   DateTime?
  place         String?
  url           String?    @db.Text
  member        String?
  memo          String?
  diary         String?
  success       Boolean?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  user   User @relation(fields: [userId], references: [id]) //UsertabelにEventtableを紐付ける
  eventPhotos   EventPhoto[]
  userId Int
}

model EventPhoto{
  id           Int        @default(autoincrement()) @id
  fileKey      String  @unique
  originalFileName String
  event  Event @relation(fields: [eventId], references: [id]) 
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  eventId      Int
}
//書き換えた際、"npm run migrate"で正式なSQLファイルを作り、DBへの反映をすること。 
